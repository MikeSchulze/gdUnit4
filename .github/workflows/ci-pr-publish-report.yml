name: 'Publish Test Report'
on:
  workflow_run:
    workflows: ['ci-pr']  # runs after ci-pr workflow
    types:
      - completed
  workflow_dispatch:
    inputs:
      workflow_run_id:
        description: 'ID of the workflow run to download artifacts from.'
        required: true
        default: ''

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  publish-reports:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        godot-version: ['4.1', '4.1.1', '4.1.2', '4.1.3', '4.1.4', '4.2', '4.2.1', '4.2.2']
        godot-status: ['stable']
        godot-net: ['-net', '']
        include:
          - godot-version: '4.3'
            godot-status: 'dev5'

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: artifact_gdUnit4_Godot${{ matrix.godot-version }}-${{ matrix.godot-status }}${{ matrix.godot-net }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: MikeSchulze/gdUnit4
          run-id: ${{ github.event.inputs.workflow_run_id || github.event.workflow_run.id }}

      - name: 'Publish Test Results'
        uses: dorny/test-reporter@v1.9.0
        with:
          name: report_gdUnit4_Godot${{ matrix.godot-version }}-${{ matrix.godot-status }}${{ matrix.godot-net }}
          # using artifact to download is broken since download-artifact@v4 see https://github.com/dorny/test-reporter/issues/363 
          # We do the download manually on step `Download artifacts`
          #artifact: artifact_gdUnit4_Godot${{ matrix.godot-version }}-${{ matrix.godot-status }}${{ matrix.godot-net }}
          path: './home/runner/work/gdUnit4/gdUnit4/reports/**/results.xml'
          reporter: java-junit
          fail-on-error: 'false'
          fail-on-empty: 'false'


  finalize:
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    name: 'Adds a link to this report to the pull request'
    needs: [publish-reports]
    permissions:
      # needed unless run with comment_mode: off
      pull-requests: write
      # only needed for private repository
      issues: read

    steps:
      - name: Create PR comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Construct the comment message
            const commentBody = 'Checkout Test Reports here: https://github.com/MikeSchulze/gdUnit4/actions/runs/${github.event.number}';

            // Add comment to the pull request
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            }).catch(error => error).then(response => {
              core.debug(response);
              if (response.status !== 204) {
                core.setFailed(`Create workflow_dispatch received status code ${response.status}`);
              }
            });
