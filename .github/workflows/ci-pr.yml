name: ci-pr

on:
  pull_request:
    paths-ignore:
      - '**.jpg'
      - '**.png'
      - '**.md'
  workflow_dispatch:

concurrency:
  group: ci-pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:

  unit-test:
    name: "Unit tests on Godot v${{ matrix.godot-version }}-${{ matrix.godot-status-version }} (${{ matrix.name }})"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    continue-on-error: false
    container:
      image: nvidia/vulkan:1.3-470
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        godot-version: ['4.0']
        godot-status-version: ['beta4']
        include:
          - os: ubuntu-latest
            name: Godot üêß Linux Build
            godot-bin-name: 'linux.x86_64'
            godot-executable_path: '~/godot-linux/godot'
            godot-cache-path: '~/godot-linux'
            godot-mono: false
            install-linux-dependencies: true

    steps:
      - name: "Install Git"
        shell: bash
        run: |
          sudo apt install git

      - name: Checkout GdUnit Repository
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: 'recursive'

      - name: Godot cache
        uses: ./.github/actions/godot-install
        with:
          godot-version: ${{ matrix.godot-version }}
          godot-status-version: ${{ matrix.godot-status-version }}
          godot-bin-name: ${{ matrix.godot-bin-name }}
          godot-cache-path: ${{ matrix.godot-cache-path }}

      - name: "Setup .NET"
        # we only setup .Net for mono versions
        if: ${{ matrix.godot-mono && !cancelled() }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: "Compile C#"
        # we only compile .Net for mono versions
        if: ${{ matrix.godot-mono && !cancelled() }}
        run: |
          ${{ matrix.godot-executable_path }} project.godot --build-solutions --quit --no-window

      - name: "Update Project"
        if: ${{ !cancelled() }}
        timeout-minutes: 1
        continue-on-error: true # we still ignore the timeout, the script is not quit and we run into a timeout
        shell: bash
        run: |
          ls -lsR ${{ matrix.godot-cache-path }}
          ${{ matrix.godot-executable_path }} --version
          ${{ matrix.godot-executable_path }} -e --path . -s res://addons/gdUnit4/src/core/scan_project.gd --no-window

      #- name: "Run example mono Test"
      #  timeout-minutes: 1
      #  uses: ./.github/actions/unit-test
      #  with:
      #    godot-bin: ${{ matrix.godot-executable_path }}
      #    test-includes: "res://addons/gdUnit4/test/mono"

      - name: "Run Unit Test"
        if: ${{ !cancelled() }}
        timeout-minutes: 10
        uses: ./.github/actions/unit-test
        with:
          godot-bin: ${{ matrix.godot-executable_path }}
          test-includes: "res://addons/gdUnit4/test/"

      #- name: "Run Unit Test Examples"
      #  if: ${{ !cancelled() }}
      #  timeout-minutes: 1
      #  uses: ./.github/actions/unit-test
      #  with:
      #    godot-bin: ${{ matrix.godot-executable_path }}
      #    test-includes: "res://gdUnit4-examples"

      - name: "Publish Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: ./.github/actions/publish-test-report
        with:
          report-name: ${{ matrix.godot-build }}${{ matrix.godot-version }}

      - name: "Upload Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: ./.github/actions/upload-test-report
        with:
          report-name: ${{ matrix.godot-build }}${{ matrix.godot-version }}
